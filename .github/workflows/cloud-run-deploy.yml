name: Cloud Run Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    if: ${{ secrets.GCP_SA_KEY != '' && secrets.PROJECT_ID != '' }}
    runs-on: ubuntu-latest
    env:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      SERVICE_NAME: node-backend
      GOOGLE_REGION: us-central1
      GOOGLE_ENTRYPOINT: "node index.js"
      GOOGLE_NODE_RUN_SCRIPTS: build
      NODE_ENV: development
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      steps:
        - uses: actions/checkout@v3
        - name: Load FIREBASE_TOKEN
          run: |
            if [ -z "$FIREBASE_TOKEN" ] && [ -f .env ]; then
              token=$(grep -E '^FIREBASE_TOKEN=' .env | cut -d '=' -f2- | tr -d '"')
              if [ -n "$token" ]; then
                echo "FIREBASE_TOKEN=$token" >> "$GITHUB_ENV"
                echo "Loaded FIREBASE_TOKEN from .env"
              else
                echo "::warning::FIREBASE_TOKEN not found in .env"
              fi
            elif [ -z "$FIREBASE_TOKEN" ]; then
              echo "::warning::FIREBASE_TOKEN not set"
            fi
        - uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Configure npm registry
        run: echo "registry=https://registry.npmjs.org/" > .npmrc
      - name: Install dependencies
        run: |
          npm install
          npm install --prefix frontend
      - name: Build frontend
        run: npm run build
      - name: Run tests
        run: npm test
      - name: Verify start script
        run: timeout 3 node index.js || true
      - uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
        - name: Trigger Cloud Build
          run: |
            subs="_SERVICE_NAME=$SERVICE_NAME,_REGION=$GOOGLE_REGION"
            if [ -n "$FIREBASE_TOKEN" ]; then
              subs="$subs,_FIREBASE_TOKEN=$FIREBASE_TOKEN"
            else
              echo "::notice::FIREBASE_TOKEN not set - skipping functions deploy"
            fi
            gcloud builds submit --config cloudbuild.yaml \
              --substitutions="$subs"
      - name: Verify Cloud Run healthcheck
        run: |
          status=$(curl -s -o /dev/null -w "%{http_code}" https://${{ env.SERVICE_NAME }}-${{ env.GOOGLE_REGION }}.a.run.app/healthz)
          if [ "$status" != "200" ]; then
            echo "Healthcheck failed with status $status"
            exit 1
          fi
