name: Firebase CI/CD

on:
  push:
    branches: [main]

jobs:
  binary-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Detect binary files
        run: |
          git diff --cached --name-only | xargs file | grep -v 'text' && exit 1 || echo "No binaries"

  deploy:
    needs: binary-check
    runs-on: ubuntu-latest
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Load FIREBASE_TOKEN
        run: |
          if [ -z "$FIREBASE_TOKEN" ] && [ -f .env ]; then
            token=$(grep -E '^FIREBASE_TOKEN=' .env | cut -d '=' -f2- | tr -d '"')
            if [ -n "$token" ]; then
              echo "FIREBASE_TOKEN=$token" >> "$GITHUB_ENV"
              echo "Loaded FIREBASE_TOKEN from .env"
            else
              echo "::warning::FIREBASE_TOKEN not found in .env"
            fi
          elif [ -z "$FIREBASE_TOKEN" ]; then
            echo "::warning::FIREBASE_TOKEN not set"
          fi

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          npm install
          npm --prefix functions install
          npm run sync-agents

      - name: Validate agent metadata
        run: npm run validate-metadata

      - name: Lint and test
        run: |
          npm run lint --if-present
          npm --prefix functions test --silent

      - name: Verify Firebase hosting targets
        run: node scripts/checkFirebaseTargets.js

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase
        run: |
          if [ -z "$FIREBASE_TOKEN" ]; then
            echo "::warning::FIREBASE_TOKEN not set - skipping deploy"
            exit 0
          fi
          firebase deploy --only functions,hosting,firestore --project ${{ secrets.FIREBASE_PROJECT_ID }} --token "$FIREBASE_TOKEN"
